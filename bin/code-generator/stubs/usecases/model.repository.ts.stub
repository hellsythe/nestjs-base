import { I{{modelClass}}Repository } from '@usecases/{{modelFile}}/repository.interface';
import { GenericRepository } from './generic.repository';
import { {{modelClass}} } from '@entities/{{modelFile}}';
import { {{modelClass}} as {{modelClass}}Schema } from '@infrastructure/db/mongo/schemas/{{modelFile}}.schema';
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';

export class {{modelClass}}Repository
  extends GenericRepository<{{modelClass}}, {{modelClass}}Schema>
  implements I{{modelClass}}Repository
{
  constructor(
    @InjectModel({{modelClass}}Schema.name)
    protected readonly model: Model<{{modelClass}}Schema>,
  ) {
    super();
  }

  protected transform(item: {{modelClass}}Schema): {{modelClass}} {
    const newModel: {{modelClass}} = new {{modelClass}}();
    Object.assign(newModel, item['_doc']);
    return newModel;
  }
}
